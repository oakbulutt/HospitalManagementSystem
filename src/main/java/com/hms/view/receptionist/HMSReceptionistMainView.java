package com.hms.view.receptionist;

import com.hms.view.Login;

public class HMSReceptionistMainView extends javax.swing.JFrame {

    public HMSReceptionistMainView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        receptionistsDesktopPane = new javax.swing.JDesktopPane();
        receptionistsMenuBar = new javax.swing.JMenuBar();
        receptionistFileMenu = new javax.swing.JMenu();
        receptionistFileMenuItemLogOut = new javax.swing.JMenuItem();
        receptionistFileMenuItemExit = new javax.swing.JMenuItem();
        receptionistOperationsMenu = new javax.swing.JMenu();
        receptionistOperationsMenuItemAppointments = new javax.swing.JMenuItem();
        receptionistOperationsMenuItemDoctors = new javax.swing.JMenuItem();
        receptionistOperationsMenuItemPatients = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout receptionistsDesktopPaneLayout = new javax.swing.GroupLayout(receptionistsDesktopPane);
        receptionistsDesktopPane.setLayout(receptionistsDesktopPaneLayout);
        receptionistsDesktopPaneLayout.setHorizontalGroup(
            receptionistsDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        receptionistsDesktopPaneLayout.setVerticalGroup(
            receptionistsDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 698, Short.MAX_VALUE)
        );

        receptionistFileMenu.setText("File");

        receptionistFileMenuItemLogOut.setText("Log Out");
        receptionistFileMenuItemLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receptionistFileMenuItemLogOutActionPerformed(evt);
            }
        });
        receptionistFileMenu.add(receptionistFileMenuItemLogOut);

        receptionistFileMenuItemExit.setText("Exit");
        receptionistFileMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receptionistFileMenuItemExitActionPerformed(evt);
            }
        });
        receptionistFileMenu.add(receptionistFileMenuItemExit);

        receptionistsMenuBar.add(receptionistFileMenu);

        receptionistOperationsMenu.setText("Operations");

        receptionistOperationsMenuItemAppointments.setText("Appointments");
        receptionistOperationsMenuItemAppointments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receptionistOperationsMenuItemAppointmentsActionPerformed(evt);
            }
        });
        receptionistOperationsMenu.add(receptionistOperationsMenuItemAppointments);

        receptionistOperationsMenuItemDoctors.setText("Doctors");
        receptionistOperationsMenuItemDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receptionistOperationsMenuItemDoctorsActionPerformed(evt);
            }
        });
        receptionistOperationsMenu.add(receptionistOperationsMenuItemDoctors);

        receptionistOperationsMenuItemPatients.setText("Patients");
        receptionistOperationsMenuItemPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receptionistOperationsMenuItemPatientsActionPerformed(evt);
            }
        });
        receptionistOperationsMenu.add(receptionistOperationsMenuItemPatients);

        receptionistsMenuBar.add(receptionistOperationsMenu);

        setJMenuBar(receptionistsMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(receptionistsDesktopPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(receptionistsDesktopPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void receptionistOperationsMenuItemAppointmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receptionistOperationsMenuItemAppointmentsActionPerformed
        // TODO add your handling code here:
         ReceptionistAppointmentView receptionistAppointmentsView = new ReceptionistAppointmentView();
        receptionistsDesktopPane.add(receptionistAppointmentsView).setVisible(true);
    }//GEN-LAST:event_receptionistOperationsMenuItemAppointmentsActionPerformed

    private void receptionistOperationsMenuItemDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receptionistOperationsMenuItemDoctorsActionPerformed
        ReceptionistDoctorsView receptionistDoctorsView = new ReceptionistDoctorsView();
        receptionistsDesktopPane.add(receptionistDoctorsView).setVisible(true);
    }//GEN-LAST:event_receptionistOperationsMenuItemDoctorsActionPerformed

    private void receptionistOperationsMenuItemPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receptionistOperationsMenuItemPatientsActionPerformed
        ReceptionistPatientsView receptionistPatientsView = new ReceptionistPatientsView();
        receptionistsDesktopPane.add(receptionistPatientsView).setVisible(true);
    }//GEN-LAST:event_receptionistOperationsMenuItemPatientsActionPerformed

    private void receptionistFileMenuItemLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receptionistFileMenuItemLogOutActionPerformed
        Login login = new Login();
        setVisible(false);
        login.setVisible(true);
    }//GEN-LAST:event_receptionistFileMenuItemLogOutActionPerformed

    private void receptionistFileMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receptionistFileMenuItemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_receptionistFileMenuItemExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HMSReceptionistMainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HMSReceptionistMainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HMSReceptionistMainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HMSReceptionistMainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HMSReceptionistMainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu receptionistFileMenu;
    private javax.swing.JMenuItem receptionistFileMenuItemExit;
    private javax.swing.JMenuItem receptionistFileMenuItemLogOut;
    private javax.swing.JMenu receptionistOperationsMenu;
    private javax.swing.JMenuItem receptionistOperationsMenuItemAppointments;
    private javax.swing.JMenuItem receptionistOperationsMenuItemDoctors;
    private javax.swing.JMenuItem receptionistOperationsMenuItemPatients;
    private javax.swing.JDesktopPane receptionistsDesktopPane;
    private javax.swing.JMenuBar receptionistsMenuBar;
    // End of variables declaration//GEN-END:variables
}
